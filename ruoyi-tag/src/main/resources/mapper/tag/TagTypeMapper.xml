<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.tag.mapper.TagTypeMapper">
    
    <resultMap type="TagType" id="TagTypeResult">
        <result property="id"    column="id"    />
        <result property="uuid"    column="uuid"    />
        <result property="typeName"    column="type_name"    />
        <result property="parentName"    column="parent_name"    />
        <result property="parentUuid"    column="parent_uuid"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="version"    column="version"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectTagTypeVo">
        select id, uuid, type_name, parent_name, parent_uuid, create_by, create_time, update_by, update_time, version, remark from tag_type
    </sql>

    <select id="selectTagTypeList" parameterType="TagType" resultMap="TagTypeResult">
        <include refid="selectTagTypeVo"/>
        <where>  
            <if test="typeName != null  and typeName != ''"> and type_name like concat('%', #{typeName}, '%')</if>
            <if test="parentName != null  and parentName != ''"> and parent_name like concat('%', #{parentName}, '%')</if>
        </where>
    </select>
    
    <select id="selectTagTypeById" parameterType="Long" resultMap="TagTypeResult">
        <include refid="selectTagTypeVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertTagType" parameterType="TagType">
        insert into tag_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="uuid != null">uuid,</if>
            <if test="typeName != null">type_name,</if>
            <if test="parentName != null">parent_name,</if>
            <if test="parentUuid != null">parent_uuid,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="version != null">version,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="uuid != null">#{uuid},</if>
            <if test="typeName != null">#{typeName},</if>
            <if test="parentName != null">#{parentName},</if>
            <if test="parentUuid != null">#{parentUuid},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="version != null">#{version},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateTagType" parameterType="TagType">
        update tag_type
        <trim prefix="SET" suffixOverrides=",">
            <if test="typeName != null">type_name = #{typeName},</if>
            <if test="parentName != null">parent_name = #{parentName},</if>
            <if test="parentUuid != null">parent_uuid = #{parentUuid},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="version != null">version = #{version},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTagTypeById" parameterType="Long">
        delete from tag_type where id = #{id}
    </delete>

    <delete id="deleteTagTypeByIds" parameterType="String">
        delete from tag_type where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>